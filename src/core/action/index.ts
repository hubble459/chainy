// Autogenerated file! Do not edit.

import {regex} from './regex';
import {select} from './select';
import {value} from './value';
import {text} from './text';
import {split} from './split';
import {select_first} from './select_first';
import {trim} from './trim';
import {attribute} from './attribute';
import {matches} from './matches';
import {first} from './array/first';
import {join} from './array/join';

export const actions = {regex, select, value, text, split, select_first, trim, attribute, matches, first, join};


export type Action<Context = any, Value = any, Options extends any[] = any[], Return = any> = (context: NonNullable<Context>, value: Value, ...options: Options) => Return;
export type Actions = typeof actions;
export type GetType<K extends keyof Actions, Value> =
        Actions[K] extends Action<any, Value extends unknown[] ? Value[number] : Value, any, infer Return>
            ? Return
            : Actions[K] extends Action<any, Value, any, infer Return>
                ? Return
                : K extends 'first' ? Value extends unknown[] ? ReturnType<typeof first<Value>> : never
                    : never;
